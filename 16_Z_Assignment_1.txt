Your supermarket company has a simple web service built on nginx that serves a static list of fresh fruit available in their stores. They want to run this service as a Docker container in their new swarm environment, but first they need you to build a Docker image for this service.

On this repo (https://github.com/satyensingh/full-docker-training-16-Z-Assignment1.git), you will find the files needed to create the image. Create a Dockerfile to define the image according to the provided specifications, then test the image by running a container in detached mode and verifying that you can access the fresh fruit data from the application.

The image should meet the following specifications:

1. Use nginx tag 1.15.8 as the base image.
2. Add the static fresh fruit data to the image so that it will be served by the nginx server. The data file is located on the server at static/fruit.json under the project directory. Add this file to the image at the location /usr/share/nginx/html/fruit.json.
3. Add the nginx configuration file. This file is located on the server in the project directory and is called nginx.conf. Add this file to the image at /etc/nginx/nginx.conf.
4. The image should expose port 80.
5. Use the following as the default command: nginx -g daemon off;.
6. Build the image with the tag fruit-list:1.0.0

Once you have built the image you should be able to test it by running it as a container:

docker run --name fruit-list -d -p 8080:80 fruit-list:1.0.0


Verify that the container serves the required data by making a request to it on port 8080. If everything is set up correctly, you should get a JSON list of fruits.

curl localhost:8080


[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]


Good luck!
------------------------------------------------------------------------------
-------------------------------------------------------------------------------


1. Use nginx tag 1.15.8 as the base image:
1. create docker file
    $ vi Dockerfile
      FROM nginx:1.15.8
      RUN apt-get update
      WORKDIR /usr/share/nginx/html
      ADD ./project/static/fruit.json ./
      WORKDIR /etc/nginx
      ADD ./project/nginx.conf ./
      EXPOSE 80  

2 create project/static directory
   $ mkdir static
   $ cd static
   $ pwd
      /root/share
   $ vi fruit.json
        copy the jsonfile (fruit.json) from github repository
         https://github.com/satyensingh/full-docker-training-16-Z-Assignment1.git
   $ls
      fruit.json

3.create nginx.conf in the root directory copy the nginx.conf from github repository
         https://github.com/satyensingh/full-docker-training-16-Z-Assignment1.git

    $ cd /root
    $ vi nginx.conf
    $ ls
         Dockerfile  project   

4. Run the Dockerfile 
    $  docker build -t fruit-list:1.0.0 .
Sending build context to Docker daemon  20.48kB
Step 1/7 : FROM nginx:1.15.8
1.15.8: Pulling from library/nginx
6ae821421a7d: Pull complete
da4474e5966c: Pull complete
eb2aec2b9c9f: Pull complete
Digest: sha256:dd2d0ac3fff2f007d99e033b64854be0941e19a2ad51f174d9240dda20d9f534
Status: Downloaded newer image for nginx:1.15.8
 ---> f09fe80eb0e7
Step 2/7 : RUN apt-get update
 ---> Running in ded778bf41c4
Get:1 http://security-cdn.debian.org/debian-security stretch/updates InRelease [94.3 kB]
Get:3 http://security-cdn.debian.org/debian-security stretch/updates/main amd64 Packages [508 kB]
Ign:2 http://cdn-fastly.deb.debian.org/debian stretch InRelease
Get:4 http://cdn-fastly.deb.debian.org/debian stretch-updates InRelease [91.0 kB]
Get:5 http://cdn-fastly.deb.debian.org/debian stretch Release [118 kB]
Get:6 http://cdn-fastly.deb.debian.org/debian stretch-updates/main amd64 Packages [27.9 kB]
Get:7 http://cdn-fastly.deb.debian.org/debian stretch Release.gpg [2365 B]
Get:8 http://cdn-fastly.deb.debian.org/debian stretch/main amd64 Packages [7086 kB]
Fetched 7927 kB in 3s (2429 kB/s)
Reading package lists...
Removing intermediate container ded778bf41c4
 ---> 854ff8789827
Step 3/7 : WORKDIR /usr/share/nginx/html
 ---> Running in af321bbacf46
Removing intermediate container af321bbacf46
 ---> af28702c1393
Step 4/7 : ADD ./project/static/fruit.json ./
 ---> 9436c9338751
Step 5/7 : WORKDIR /etc/nginx
 ---> Running in 7ef3ac4804c9
Removing intermediate container 7ef3ac4804c9
 ---> e3cdc0c4ec21
Step 6/7 : ADD ./project/nginx.conf ./
 ---> 9636596c2a23
Step 7/7 : EXPOSE 80
 ---> Running in d164ae53471d
Removing intermediate container d164ae53471d
 ---> db0a2519ec0d
Successfully built db0a2519ec0d
Successfully tagged fruit-list:1.0.0

5.run the container
  docker run --name fruit-list -d -p 8080:80 fruit-list:1.0.0
	4639c5cb8efd9b0d0282f3949ace0687fb16079ef756c70ede026bd114f60583

root@ip-172-31-1-28:/home/ubuntu# docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                  NAMES
4639c5cb8efd        fruit-list:1.0.0    "nginx -g 'daemon of…"   4 seconds ago       Up 4 seconds        0.0.0.0:8080->80/tcp   fruit-list


6. curl localhost:8080 

{
  "description": "A list of fruits.",
  "fruits": [
    "apple",
    "apricot",
    "avocado",
    "banana",
    "bell pepper",
    "bilberry",
    "blackberry",
    "blackcurrant",
    "blood orange",
    "blueberry",
    "boysenberry",
    "breadfruit",
    "canary melon",
    "cantaloupe",
    "cherimoya",
    "cherry",
    "chili pepper",
    "clementine",
    "cloudberry",
    "coconut",
    "cranberry",
    "cucumber",
    "currant",
    "damson",
    "date",
    "dragonfruit",
    "durian",
    "eggplant",
    "elderberry",
    "feijoa",
    "fig",
    "goji berry",
    "gooseberry",
    "grape",
    "grapefruit",
    "guava",
    "honeydew",
    "huckleberry",
    "jackfruit",
    "jambul",
    "jujube",
    "kiwi fruit",
    "kumquat",
    "lemon",
    "lime",
    "loquat",
    "lychee",
    "mandarine",
    "mango",
    "mulberry",
    "nectarine",
    "nut",
    "olive",
    "orange",
    "pamelo",
    "papaya",
    "passionfruit",
    "peach",
    "pear",
    "persimmon",
    "physalis",
    "pineapple",
    "plum",
    "pomegranate",
    "pomelo",
    "purple mangosteen",
    "quince",
    "raisin",
    "rambutan",
    "raspberry",
    "redcurrant",
    "rock melon",
    "salal berry",
    "satsuma",
    "star fruit",
    "strawberry",
    "tamarillo",
    "tangerine",
    "tomato",
    "ugli fruit",
    "watermelon"
  ]
}